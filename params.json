{"body":"Kilobyte SVG Challenge\r\n======================\r\n\r\nMake an accurate SVG of a logo, in 1024 bytes or less!\r\n\r\n## Rationale\r\n\r\nThe purpose of the Kilobyte SVG Challenge is sixfold:\r\n\r\n* marketing SVG use on the web\r\n* teaching SVG, \"view source\" style\r\n* marketing and improving SVG tools\r\n* collecting great, fast, and tiny SVG logos\r\n* learning, and having lots of geeky fun doing it!\r\n\r\n## Rules\r\n\r\n* Viewed in a web browser,\r\n  your SVG must scale to the window size\r\n  and maintain its aspect ratio. [How?](#how)\r\n\r\n* Quality trumps size\r\n  â€“ while 1k is a goal,\r\n  don't sacrifice looks!\r\n\r\n* You are encouraged to improve\r\n  on already submitted logos!\r\n\r\n* No raster data, `data:` urls or multi-file svgs.\r\n\r\n* One tag per line, indented one or two spaces.\r\n\r\n* Create a pull request:\r\n  * Name it after your logo.\r\n  * List `original: <url>`\r\n    on the first line of your comment,\r\n    linking a version of the logo on the web.\r\n\r\n### Best practices\r\n\r\n* Since one goal is teaching, think of your commits as a step by step guide:\r\n* When optimizing, make separate commits for different operations you do.\r\n* Write good commit messages about what you did, that others can learn from.\r\n* When using tools, you are encouraged to name them in your commit messages.\r\n* If it's a command-line tool, better still:\r\n  paste your command line args further down in the message!\r\n\r\n## How?\r\n\r\n* To make an SVG scale,\r\n  make sure your `<svg>` element\r\n  has a `viewBox` attribute,\r\n  and no `width`, `height` or\r\n  [`preserveAspectRatio`](https://developer.mozilla.org/en-US/docs/SVG/Attribute/preserveAspectRatio)\r\n  attributes (`xMidYMid meet`\r\n  is already the default).\r\n\r\n## Tools\r\n\r\n* [InkScape](http://inkscape.org/): a popular open source SVG editor\r\n* Your favourite text editor - Emacs, vim, Textmate, et cetera\r\n* [Scour](http://www.codedread.com/scour/) [[launchpad](https://launchpad.net/scour)]: a python module / script by Jeff Schiller to shrink SVG file sizes\r\n* [SVG Cleaner](http://libregraphicsworld.org/blog/entry/introducing-svg-cleaner): a similar perl script with a graphical UI wrapper\r\n* [SVG-Cleaner](https://npmjs.org/package/svg-cleaner) [[github](https://github.com/preciousforever/SVG-Cleaner)]: a javascript npm port of (parts of) Scour\r\n* [svgtidy](http://intertwingly.net/code/svgtidy/svgtidy.rb): a ruby script by Sam Ruby\r\n* [CleanSVG](http://cleansvg.codeplex.com/): a .NET windows tool by Microsoft\r\n\r\n## Legal\r\n\r\nAll logos, copyrights,\r\ntrademarks and other legal rights\r\nto the images in this repository\r\nbelong to their respective owners,\r\nnot the people submitting\r\nvectorized versions thereof.\r\n\r\nIf you find your logo represented here\r\nand would rather have people use whatever\r\ninferior non-scalable, slow-loading,\r\npixellated raster graphics version\r\nthey find when talking about you on the web,\r\njust submit an [issue](https://github.com/johan/kilobyte-svg-challenge/issues) mentioning \"takedown\"\r\nin its title, list the url to the logo in question,\r\nand it will of course be removed from here.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Your mission, should you choose to accept it: make your favourite logo in 1024 bytes or less.","google":"UA-36882640-1","name":"Kilobyte SVG Challenge"}